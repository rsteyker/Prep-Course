{"version":3,"sources":["homework.js"],"names":["obtenerMayor","x","y","mayoriaDeEdad","edad","conection","status","saludo","idioma","colors","color","esDiezOCinco","numero","estaEnRango","esEntero","fizzBuzz","operadoresLogicos","num1","num2","num3","esPrimo","i","esVerdadero","valor","tablaDelSeis","tieneTresDigitos","doWhile","contador","module","exports"],"mappings":"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","sourcesContent":["// No cambies los nombres de las funciones.\r\n\r\nfunction obtenerMayor(x, y) {\r\n  // \"x\" e \"y\" son números enteros (int).\r\n  // Devuelve el número más grande\r\n  // Si son iguales, devuelve cualquiera de los dos\r\n  // Tu código:\r\n  if(x === y || x > y){\r\n    return x;\r\n  }else{\r\n    return y;\r\n  }\r\n\r\n}\r\n\r\nfunction mayoriaDeEdad(edad) {\r\n  //Determinar si la persona según su edad puede ingresar a un evento.\r\n  //Si tiene 18 años ó más, devolver --> \"Allowed\"\r\n  //Si es menor, devolver --> \"Not allowed\"\r\n  if(edad >= 18){\r\n    return \"Allowed\";\r\n  }else{\r\n    return \"Not allowed\";\r\n  }\r\n}\r\n\r\n  \r\nfunction conection(status) {\r\n  //Recibimos un estado de conexión de un usuario representado por un valor numérico. \r\n  //Cuando el estado es igual a 1, el usuario está \"Online\"\r\n  //Cuando el estado es igual a 2, el usuario está \"Away\"\r\n  //De lo contrario, presumimos que el usuario está \"Offline\"\r\n  //Devolver el estado de conexión de usuario en cada uno de los casos.\r\nif(status === 1)return \"Online\"\r\nelse if(status ===2)return \"Away\"\r\nelse return \"Offline\";\r\n\r\n}\r\n\r\nfunction saludo(idioma) {\r\n  // Devuelve un saludo en tres diferentes lenguajes:\r\n  // Si \"idioma\" es \"aleman\", devuelve \"Guten Tag!\"\r\n  // Si \"idioma\" es \"mandarin\", devuelve \"Ni Hao!\"\r\n  // Si \"idioma\" es \"ingles\", devuelve \"Hello!\"\r\n  // Si \"idioma\" no es ninguno de los anteiores o es `undefined` devuelve \"Hola!\"\r\n  // Tu código:\r\nswitch(idioma){\r\n  case \"Aleman\":\r\n    return \"Guten Tag!\"\r\n  case \"Mandarin\":\r\n    return \"Ni hao!\"\r\n  case \"ingles\":\r\n    return \"Hello!\"\r\n  default: return \"Hola\";\r\n}\r\n}\r\n\r\nfunction colors(color) {\r\n  //La función recibe un color. Devolver el string correspondiente:\r\n  //En caso que el color recibido sea \"blue\", devuleve --> \"This is blue\"\r\n  //En caso que el color recibido sea \"red\", devuleve --> \"This is red\"\r\n  //En caso que el color recibido sea \"green\", devuleve --> \"This is green\"\r\n  //En caso que el color recibido sea \"orange\", devuleve --> \"This is orange\"\r\n  //Caso default: devuelve --> \"Color not found\"\r\n  //Usar el statement Switch.\r\n  switch(color){\r\n    case \"blue\":\r\n      return \"This is blue\"\r\n    case \"red\":\r\n      return \"This is red\"\r\n    case \"green\":\r\n      return \"This is green\"\r\n    case \"orange\":\r\n      return \"Tis is orange\"\r\n    \r\n  }\r\n}\r\n\r\nfunction esDiezOCinco(numero) {\r\n  // Devuelve \"true\" si \"numero\" es 10 o 5\r\n  // De lo contrario, devuelve \"false\"\r\n  // Tu código:\r\n  if(numero === 10 || numero ===5){\r\n    return true;\r\n  }else{\r\n    return false;\r\n  }\r\n}\r\n\r\nfunction estaEnRango(numero) {\r\n  // Devuelve \"true\" si \"numero\" es menor que 50 y mayor que 20\r\n  // De lo contrario, devuelve \"false\"\r\n  // Tu código:\r\n\r\n  // operadr ternario: \r\n//       condicio\r\n//numero ===10 || numero ===5 ? true : false;\r\n  if(numero <50  && numero > 20){\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n  \r\n  \r\n\r\n\r\nfunction esEntero(numero) {\r\n  // Devuelve \"true\" si \"numero\" es un entero (int/integer)\r\n  // Ejemplo: 0.8 -> false\r\n  // Ejemplo: 1 -> true\r\n  // Ejemplo: -10 -> true\r\n  // De lo contrario, devuelve \"false\"\r\n  // Pista: Puedes resolver esto usando `Math.floor`\r\n  // Tu código:\r\n\r\n/**if(numero  - Math.floor(numero)===0){\r\n  return true;\r\n}else{\r\n  return false;\r\n}*/\r\n\r\nif(numero%1 ===0){\r\n  return true;\r\n}else{\r\n  return false;\r\n}\r\n\r\n}\r\n \r\nfunction fizzBuzz(numero) {\r\n  // Si \"numero\" es divisible entre 3, devuelve \"fizz\"\r\n  // Si \"numero\" es divisible entre 5, devuelve \"buzz\"\r\n  // Si \"numero\" es divisible entre 3 y 5 (ambos), devuelve \"fizzbuzz\"\r\n  // De lo contrario, devuelve el numero\r\nif(numero % 3 ===0 && numero % 5 === 0){\r\n  return \"fizz\"\r\n}else if(numero  % 3 ===0){\r\n  return \"fizz\";\r\n} else if(numero % 5 === 0){\r\n  return \"buzz\";\r\n}else{\r\n  return numero;\r\n}\r\n\r\n}\r\n\r\nfunction operadoresLogicos(num1, num2, num3) {\r\n  //La función recibe tres números distintos. \r\n  //Si num1 es mayor a num2 y a num3 y además es positivo, retornar ---> \"Número 1 es mayor y positivo\"\r\n  //Si alguno de los tres números es negativo, retornar ---> \"Hay negativos\"\r\n  //Si num3 es más grande que num1 y num2, aumentar su valor en 1 y retornar el nuevo valor.\r\n  //0 no es ni positivo ni negativo. Si alguno de los argumentos es 0, retornar \"Error\".\r\n  //Si no se cumplen ninguna de las condiciones anteriores, retornar false. \r\n\r\nif(num1 ===0 || num2 ===0 || num3 ===0){\r\n  return \"error\";\r\n}else if(num1 < 0 || num2 < 0 || num3 < 0){\r\n  return \"Hay negativos\";\r\n}\r\nif(num1 > num2 && num1 > num3 && num1 > 0){\r\n  return \"Numero 1 es mayor y positivo\";\r\n}\r\nif(num3 > num2 && num3 > num2){\r\n  return num3 + 1;\r\n}\r\nreturn false;\r\n\r\n}\r\n\r\nfunction esPrimo(numero) {\r\n  // Devuelve \"true\" si \"numero\" es primo\r\n  // De lo contrario devuelve \"falso\"\r\n  // Pista: un número primo solo es divisible por sí mismo y por 1\r\n  // Pista 2: Puedes resolverlo usando un bucle `for`\r\n  // Nota: Los números 0 y 1 NO son considerados números primos\r\nif(numero===0 || numero===1 || numero===4){\r\n  return false;\r\n}\r\nfor(let i = 2; i < numero / 2; i++){\r\n  if(numero % 1 ===0 ){\r\n    return false;\r\n  }\r\n}\r\nreturn true;\r\n}\r\n\r\nfunction esVerdadero(valor){\r\n  //Escribe una función que reciba un valor booleano y retorne “Soy verdadero” \r\n  //si su valor es true y “Soy falso” si su valor es false.\r\n  //Escribe tu código aquí\r\nif(valor){\r\n  return \"Soy verdadero\";\r\n}else{\r\n  return \"Soy falso\";\r\n}\r\n}\r\n\r\nfunction tablaDelSeis(){\r\n  //Escribe una función que muestre la tabla de multiplicar del 6 (del 0 al 60).\r\n  //La función devuelve un array con los resultados de la tabla de multiplicar del 6 en orden creciente.\r\n  //Escribe tu código aquí   \r\n  \r\n}\r\n\r\nfunction tieneTresDigitos(numero){\r\n  //Leer un número entero y retornar true si tiene 3 dígitos. Caso contrario, retorna false.\r\n  //Escribe tu código aquí\r\n  if(numero > 99 && numero < 1000){\r\n    return true;\r\n  }else{\r\n    return false;\r\n  }\r\n}\r\n\r\nfunction doWhile(numero) {\r\n  //Implementar una función tal que vaya aumentando el valor recibido en 5 hasta un límite de 8 veces\r\n  //Retornar el valor final.\r\n  //Usar el bucle do ... while.\r\n  let contador = 0\r\n  while(contador <8){\r\n    contador ++;\r\n    numero += 5;\r\n  }\r\n  return numero;\r\n}\r\n\r\n\r\n// No modificar nada debajo de esta línea\r\n// --------------------------------\r\n\r\nmodule.exports = {\r\n  obtenerMayor,\r\n  mayoriaDeEdad,\r\n  conection,\r\n  saludo,\r\n  colors,\r\n  esDiezOCinco,\r\n  estaEnRango,\r\n  esEntero,\r\n  fizzBuzz,\r\n  operadoresLogicos,\r\n  esPrimo,\r\n  esVerdadero,\r\n  tablaDelSeis,\r\n  tieneTresDigitos,\r\n  doWhile\r\n};\r\n"],"file":"homework.dev.js"}